<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>NN Voting System</title>
		<description>Voter-Verifiable Casting Correctness E-Voting System.</description>
		<link>https://camilog.github.io/VotingSystemVotingSystem</link>
		<atom:link href="https://camilog.github.io/VotingSystemVotingSystem/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>LatinCrypt 2015 Proposal</title>
				<description>&lt;p&gt;The end-to-end verification on electronic voting systems consists on three steps that the system must ensure that are being done correctly, and that any person could check that this is happening. The three steps are: the vote is cast as intended, recorded as cast and tallied as recorded. If the vote is cast as an encryption of the selection made by each voter, the last two steps could be publicly audited by any person, but not the first one. To maintain privacy, the voter is the only person that could verify that her vote is being cast as intended. The main objective of this system is to give an opportunity to the voter to verify that the encryption made of her selections really &amp;quot;protects&amp;quot; the selections that the voter was intended to vote and not any other. Having this, the system can easily recover of an attack (made in the selection phase of the system), because is quickly recognized by the voters and the administrators of the election can take the necessary actions to fix the problem.&lt;/p&gt;

&lt;p&gt;The system consists in a series of modules, highly specific on their functions, making it easier to audit and simpler to implement (each module could be implemented by its own). The modules are: the key generation (for the authority and for the voters), the selection and printing of the ballot (the system uses a VVPAT scheme), the verification process of that ballot, the casting of the vote, and finally the counting of all the votes. Each of this modules is in communication with a Bulletin Board server, where all the public information is being stored, plus some mobile applications that help the labor of the authorities and administrators of the election.&lt;/p&gt;

&lt;p&gt;The implementation made of the system aims to the use of user-friendly hardware, and also being very minimal. For the selection process is being used a tablet connected to a printer, because of the familiarity of the users with these devices. The rest of the modules could be implemented in a very minimal hardware, and is recommended for the verification process to being implemented in the less necessary hardware, because this is a crucial step of the system, and with less hardware is a lot easier to audit. In the actual implementation this is made on a Raspberry PI. Finally, the other mobile applications are very minimal and need just a basic smartphone to work.&lt;/p&gt;
</description>
				<pubDate>Tue, 28 Jul 2015 00:00:00 -0300</pubDate>
				<link>https://camilog.github.io/VotingSystemVotingSystem/2015/07/LatinCrypt2015-proposal</link>
				<guid isPermaLink="true">https://camilog.github.io/VotingSystemVotingSystem/2015/07/LatinCrypt2015-proposal</guid>
			</item>
		
	</channel>
</rss>
